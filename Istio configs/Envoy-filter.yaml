apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: my-service-rate-limit
  namespace: default # Apply this in the same namespace as my-service
spec:
  workloadSelector:
    # This targets the Envoy sidecars attached to pods with 'app: my-service' label
    labels:
      app: my-service
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND # Apply to inbound requests to the sidecar (i.e., requests to my-service)
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
            subFilter:
              # We typically insert the rate limit filter before the router filter
              # The router filter is what directs traffic to the actual application endpoint
              name: "envoy.filters.http.router"
    patch:
      operation: INSERT_BEFORE # Insert our rate limit filter before the router
      value:
        name: "envoy.filters.http.rate_limit"
        typed_config:
          "@type": "type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit"
          domain: "my_service_domain" # A domain to identify this rate limit configuration
          rate_limit_service:
            grpc_service:
              envoy_grpc:
                # This 'cluster_name' must point to the service that provides your rate limit functionality
                # You would typically define this 'rate-limit-service' in a separate Kubernetes Service
                # and potentially a corresponding Istio ServiceEntry if it's external to the mesh.
                cluster_name: "rate-limit-service"
              timeout: 0.5s # Timeout for the gRPC call to the rate limit service
          # descriptors:
          #   - key: "generic_key"
          #     value: "requests_per_second"
          #     rate_limit:
          #       requests_per_unit: 5 # e.g., 5 requests
          #       unit: SECOND # per second
          #       # You would define more complex descriptors based on headers, paths, etc.,
          #       # and configure your external rate limit service to understand these.