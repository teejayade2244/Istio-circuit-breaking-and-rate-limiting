apiVersion: apps/v1
kind: Deployment
metadata:
  name: rate-limit-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rate-limit-service
  template:
    metadata:
      labels:
        app: rate-limit-service
    spec:
      containers:
      - name: rate-limit-service
        image: envoyproxy/ratelimit:master  # Use the latest ratelimit image
        command: ["/bin/ratelimit"]  # Explicitly run the binary
        args:
        - "-config=/data/ratelimit/config/config.yaml"  # Load config
        ports:
        - containerPort: 8081  # gRPC
        - containerPort: 8080  # HTTP
        env:
        - name: REDIS_SOCKET_TYPE
          value: tcp
        - name: REDIS_URL
          value: redis:6379
        - name: USE_STATSD
          value: "false"
        - name: LOG_LEVEL
          value: debug
        volumeMounts:
        - name: config-volume
          mountPath: /data/ratelimit/config
        livenessProbe:   # Add health checks
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: rate-limit-config

---
apiVersion: v1
kind: Service
metadata:
  name: rate-limit-service
  namespace: default
spec:
  selector:
    app: rate-limit-service
  ports:
  - name: grpc
    port: 8081
    targetPort: 8081


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rate-limit-config
  namespace: default
data:
  config.yaml: |
    domain: httpbin_rate_limit
    descriptors:
      - key: generic_key
        value: httpbin_requests
        rate_limit:
          unit: second
          requests_per_unit: 10

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: default
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
    
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: default
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379